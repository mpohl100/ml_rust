name: Test Coverage

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  coverage:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Generate coverage report (in devcontainer)
        uses: devcontainers/ci@v0.3
        with:
          env: |
            RUN_POSTCREATE=true
          runCmd: |
            mkdir -p coverage
            WORKSPACE_MEMBERS=$(cargo metadata --format-version 1 --no-deps | jq -r '.packages[].name')
            echo "Coverage Report" > coverage/summary.md
            echo "==============" >> coverage/summary.md
            echo "" >> coverage/summary.md
            TOTAL_LINES=0
            TOTAL_COVERED=0
            for crate in $WORKSPACE_MEMBERS; do
              echo "Generating coverage for crate: $crate"
              cargo tarpaulin \
                --package "$crate" \
                --out Json \
                --output-dir coverage \
                --skip-clean \
                --exclude-files "target/*" \
                --exclude-files "*/tests/*" \
                --exclude-files "*/benches/*" \
                --timeout 300 \
                || true
              if [ -f "coverage/tarpaulin-report.json" ]; then
                mv "coverage/tarpaulin-report.json" "coverage/${crate}-report.json"
                if [ -f "coverage/${crate}-report.json" ]; then
                  LINES=$(jq -r '.files | map(.coverable) | add // 0' "coverage/${crate}-report.json")
                  COVERED=$(jq -r '.files | map(.covered) | add // 0' "coverage/${crate}-report.json")
                  if [ "$LINES" -gt 0 ]; then
                    PERCENT=$(( (100 * COVERED) / LINES ))
                    echo "| $crate | $COVERED/$LINES | ${PERCENT}% |" >> coverage/summary.md
                    TOTAL_LINES=$((TOTAL_LINES + LINES))
                    TOTAL_COVERED=$((TOTAL_COVERED + COVERED))
                  else
                    echo "| $crate | 0/0 | N/A |" >> coverage/summary.md
                  fi
                fi
              fi
            done
            sed -i '3i| Crate | Lines Covered | Coverage % |' coverage/summary.md
            sed -i '4i|-------|---------------|------------|' coverage/summary.md
            if [ "$TOTAL_LINES" -gt 0 ]; then
              TOTAL_PERCENT=$(( (100 * TOTAL_COVERED) / TOTAL_LINES ))
              echo "" >> coverage/summary.md
              echo "**Total Coverage: $TOTAL_COVERED/$TOTAL_LINES (${TOTAL_PERCENT}%)**" >> coverage/summary.md
            fi
            echo "" >> coverage/summary.md
            echo "Generated at: $(date)" >> coverage/summary.md

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Comment PR with coverage (outside devcontainer)
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const postCoverageComment = require('./.github/scripts/post_coverage_comment.js');
            await postCoverageComment({github, context});

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: coverage/
          retention-days: 30