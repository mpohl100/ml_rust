name: Test Coverage

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  coverage:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Cache cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y bc jq

      - name: Install cargo-tarpaulin
        run: cargo install cargo-tarpaulin

      - name: Generate coverage report (in devcontainer)
        run: |
          docker exec $(docker ps -qf "ancestor=ml_rust_devcontainer_image") bash -c "
            mkdir -p /workspaces/ml_rust/coverage
            cd /workspaces/ml_rust
            WORKSPACE_MEMBERS=\$(cargo metadata --format-version 1 --no-deps | jq -r '.packages[].name')
            echo 'Coverage Report' > coverage/summary.md
            echo '==============' >> coverage/summary.md
            echo '' >> coverage/summary.md
            TOTAL_LINES=0
            TOTAL_COVERED=0
            for crate in \$WORKSPACE_MEMBERS; do
              echo 'Generating coverage for crate: '\$crate
              cargo tarpaulin \
                --package \"\$crate\" \
                --out Json \
                --output-dir coverage \
                --skip-clean \
                --exclude-files \"target/*\" \
                --exclude-files \"*/tests/*\" \
                --exclude-files \"*/benches/*\" \
                --timeout 300 \
                || true
              if [ -f \"coverage/tarpaulin-report.json\" ]; then
                mv \"coverage/tarpaulin-report.json\" \"coverage/\${crate}-report.json\"
                if [ -f \"coverage/\${crate}-report.json\" ]; then
                  LINES=\$(jq -r '.files | map(.coverable) | add // 0' \"coverage/\${crate}-report.json\")
                  COVERED=\$(jq -r '.files | map(.covered) | add // 0' \"coverage/\${crate}-report.json\")
                  if [ \"\$LINES\" -gt 0 ]; then
                    PERCENT=\$(echo \"scale=2; \$COVERED * 100 / \$LINES\" | bc -l)
                    echo \"| \$crate | \$COVERED/\$LINES | \${PERCENT}% |\" >> coverage/summary.md
                    TOTAL_LINES=\$((TOTAL_LINES + LINES))
                    TOTAL_COVERED=\$((TOTAL_COVERED + COVERED))
                  else
                    echo \"| \$crate | 0/0 | N/A |\" >> coverage/summary.md
                  fi
                fi
              fi
            done
            sed -i '3i| Crate | Lines Covered | Coverage % |' coverage/summary.md
            sed -i '4i|-------|---------------|------------|' coverage/summary.md
            if [ \"\$TOTAL_LINES\" -gt 0 ]; then
              TOTAL_PERCENT=\$(echo \"scale=2; \$TOTAL_COVERED * 100 / \$TOTAL_LINES\" | bc -l)
              echo '' >> coverage/summary.md
              echo \"**Total Coverage: \$TOTAL_COVERED/\$TOTAL_LINES (\${TOTAL_PERCENT}%)**\" >> coverage/summary.md
            fi
            echo '' >> coverage/summary.md
            echo \"Generated at: \$(date)\" >> coverage/summary.md
          "

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Comment PR with coverage (outside devcontainer)
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const postCoverageComment = require('./.github/scripts/post_coverage_comment.js');
            await postCoverageComment({github, context});

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: coverage/
          retention-days: 30