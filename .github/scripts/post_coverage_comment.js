const fs = require('fs');

module.exports = async ({github, context}) => {
  try {
    const coverage = fs.readFileSync('coverage/summary.md', 'utf8');
    
    const body = '## 📊 Test Coverage Report\n\n' + coverage + '\n\n<details>\n<summary>📋 Coverage Details</summary>\n\nThis report shows the test coverage for each Rust crate in the workspace.\n\n- **Lines Covered**: Number of executable lines covered by tests\n- **Coverage %**: Percentage of lines covered\n- Report generated by [cargo-tarpaulin](https://github.com/xd009642/tarpaulin)\n\n</details>';

    // Find existing coverage comment
    const comments = await github.rest.issues.listComments({
      owner: context.repo.owner,
      repo: context.repo.repo,
      issue_number: context.issue.number,
    });

    const coverageComment = comments.data.find(comment => 
      comment.body.includes('📊 Test Coverage Report')
    );

    if (coverageComment) {
      // Update existing comment
      await github.rest.issues.updateComment({
        owner: context.repo.owner,
        repo: context.repo.repo,
        comment_id: coverageComment.id,
        body: body
      });
    } else {
      // Create new comment
      await github.rest.issues.createComment({
        owner: context.repo.owner,
        repo: context.repo.repo,
        issue_number: context.issue.number,
        body: body
      });
    }
  } catch (error) {
    console.error('Error reading coverage report:', error);
    
    // Post error comment
    await github.rest.issues.createComment({
      owner: context.repo.owner,
      repo: context.repo.repo,
      issue_number: context.issue.number,
      body: '⚠️ Unable to generate coverage report. Please check the workflow logs for details.'
    });
  }
};
